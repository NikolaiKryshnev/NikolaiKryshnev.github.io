//Подключение шрифта
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}

//Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobSize, $maxSize) {
	$addSize: $pcSize - $mobSize;
	@if $maxSize==1 {
		//Только если меньше контейнера
		font-size: $pcSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $maxSize==2 {
		//Только если больше контейнера
		font-size: $pcSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}

//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}



@mixin f700(){
	font-family: PlayfairDisplay-Bold;
}

@mixin f500(){
	font-family: CynthoNext-Medium;
}

@mixin f400(){
	font-family: PlayfairDisplay-Regular;
}

@mixin f300(){
	font-family: CynthoNext-Light;
}

// @mixin f100()
// 	font-family: Roboto-Thin

//</FONTS>---------------------------------------

@mixin flexbox(){
	display: flex;
	font-size: 0;
}

@mixin verticalcenter(){
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

@mixin horizcenter(){
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

@mixin blackwhite(){
	filter: url(filters.svg#grayscale);
	filter: gray;
	-webkit-filter: grayscale(1);
}
	
@mixin blurrytext(){
   color: transparent;
	text-shadow: 0 0 5px rgba(0,0,0,0.5);
}


@mixin white(){
	filter: brightness(0) invert(1);
}
	

//<TRANSITION MIXIN>---------------------------------------

@mixin transitColor($s){
	transition: $s color linear;
}

@mixin transitBgColor($s){
	transition: $s background-color linear;
}

@mixin transitTextandBgColor($s){
	transition: $s background-color linear, $s color linear;
}
//</TRANSITION MIXIN>---------------------------------------

//<TRANSFORM MIXIN>---------------------------------------

@mixin rotate($deg){
	transform: rotate($deg);
}

@mixin translate($px){
	transform: translate($px);
}

@mixin translateX($px){
	transform: translateX($px);
}

@mixin translateY($px){
	transform: translateY($px);
}

@mixin translateZ($px){
	transform: translateZ($px);
}

@mixin btnBot($right,$left ){
	position: fixed;
	bottom: $right;
	right: $left;
}

//</TRANSFORM MIXIN>---------------------------------------


//<IMG>---------------------------------------

@mixin img_01(){
	position: relative;
	z-index: 2;

	width: 100%;
	height: 100%;

	vertical-align: bottom;
	opacity: 1;
	object-fit: cover;
}

@mixin img_02(){
	position: absolute;
	top: 0;
	left: 0;

	display: block;
	
	width: 100%;
	height: 100%;
}

@mixin img_03($pd){
	position: relative;

	padding: $pd 0;

	width: 100%;

	overflow: hidden;
}

//</IMG>---------------------------------------

//<TRI>---------------------------------------

@mixin triT($height, $width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: 0 $width $height $width;
	border-color: transparent transparent $color transparent;
}

@mixin triTR($width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: 0 $width $width 0;
	border-color: transparent transparent $color transparent;
}


@mixin triT($height, $width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: $height 0 $height $width;
	border-color: transparent transparent $color transparent;
}

@mixin triTL($width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: $width $width 0 0;
	border-color: transparent transparent $color transparent;
}

@mixin triBR($width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: 0 0 $width $width;
	border-color: transparent transparent $color transparent;
}


@mixin triB($height, $width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: $height $width 0 $width;
	border-color: transparent transparent $color transparent;
}

@mixin triBL($width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: $width 0 0 $width;
	border-color: transparent transparent $color transparent;
}

@mixin triL($height, $width, $color){
	width: 0;
	height: 0;
	border-style: solid;
	border-width: $height $width $height 0;
	border-color: transparent transparent $color transparent;
}

//</TRI>---------------------------------------


//<pseudoEl>---------------------------------------

@mixin pseudoEl($display, $pos, $content){
	content: $content;
	display: $display;
	position: $pos;
}

@mixin bgBlack($op, $index){
	
	&::before{
		@include pseudoEl(block, absolute, '');
		top: 0;
		bottom: 0;
		right: 0;
		left: 0;
		z-index: $index;
		width: 100%;
		height: 100%;
		opacity: 0;
		visibility: hidden;
		z-index: 9;

		transition: opacity 0.3s linear, visibility 0.3s linear;
	}
	&.active::before{
		visibility: visible;
		opacity: 1;
		background: rgba(0, 0, 0, $op);
	}

}
@mixin parallaxBg(){
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	
}

//</pseudoEl>---------------------------------------
